@{
    tableLanguage = "en-US"

    ####################
    ### Common texts ###
    ####################

    cMultiText = "text1: {0} Text2: {1}"
    cPressAnyKey = "Press any key to continue..."
    cPressEnterKey = "Press the enter key to continue..."
    cFileAlreadyExists = "File already exists!"
    cFileDontExist = "'{0}' does not exist!"
    cFilesFound = "'{0}' files found!"
    cChosen = "'{0}' chosen!"
    cChooseFederation = "Choose your federation"
    cPleaseProvideValueFor = "Please provide a value for {0}"
    cYouHaveToProvideValue = "You have to provide a value."
    cDone = "Done!"
    cCreated = "Created!"
    cAllDone = "All done!"
    cPathExistsAtPath = "{0} exists at {1}"
    cPathNotExistCreatingHere = "{0} did not exist, creating it here: {1}"
    
    ##################################
    ### Main configuration cmdlets ###
    ##################################

    mainconfStartMessage = @"
This script will create a ADFSToolkit configuration file.
The ADFSToolkit configuration file contains information about which federation the IdP is connected to and
also keeps record of the institution config file(s) that handles the federation metadata and feed.
"@
    mainconfDoCreateConfigFile = "Do you want to create a new configuration file?`n(the current one will be backed up)"
    mainconfOldConfigBackedUp = "Current configuration file backed up to: '{0}'"
    mainconfChooseFederationMessage = @"
Choose your federation in the list.
If it's not present, click Cancel
"@
    mainconfChosenFederation = "Federation '{0}' chosen!"
    mainconfSearchForExistingInstConfFile = "Searching for existing institution config files..."
    mainconfSelectConfFilesToAddToMainConf = "Select the configuration file(s) you want to add to the ADFSToolkit configuration"
    mainconfSelectInstConfFilesTohandle = "Select institution configuration file(s) to handle..."
    mainconfNewConfFileCreated = "New configuration file created: '{0}'"
    mainconfAbortDueToExistingConfFile = "Aborting due to already existing configuration file."
    mainconfConfigFileExists = "A configuration file already exists!"
    mainconfFileNotExists = "ADFS configuration file does not exist! Run New-ADFSTkConfiguration first!"
    mainconfConfigFileAlreadyAdded = "The configuration item already added."
    mainconfConfigFileStatus = "The status of the configuration item is: {0}"
    mainconfConfigItemAdded = "Configuration item added!"
    mainconfConfigItemDefaultDisabledMessage = "The configuration item is default disabled. To enable it, run Enable-ADFSTkInstitutionConfiguration."
    mainconfADFSTkConfigFileNotFound = "The configuration file '{0}' cound not be found. Aborting!"
    mainconfConfItemNotFound = "The configuration item '{0}' not found in ADFSToolkit configuration file. Aborting!"
    mainconfChangedSuccessfully = "Configuration changed successfully!"
    mainconfNoInstConfigsFound = @"
We could not find any Institution config file!

The Institution config file contains information about your institution and where ADFS Toolkit can 
find attributes in you environment.

To create a Institution config file use the cmdlet:

New-ADFSTkInstitutionConfiguration
"@

    #########################################
    ### Institution configuration cmdlets ###
    #########################################

    confCreateNewConfigurationFile = "You are about to create a new institution configuration file for ADFSToolkit."
    confNoPreviousFile = "No Previous Configuration detected"
    confUsingPreviousFileForDefaulValues = @"
Using previous configuration for defaults (file: {0})
PLEASE NOTE: Previous hand edits to config must be manually applied again!
"@
    confPreviousFileNotExist = "Error:Migration file {0} does not exist, exiting"
    confStartMessage = @"
You will be prompted with questions about metadata, signature fingerprint
and other question about your institution.

Hit enter to accept the defaults in round brackets

If you make a mistake or want to change a value after this cmdlet is run
you can manually open the config file or re-run this command.
"@
    confConfigurationAlreadyExistsCaption = "ADFSToolkit:Configuration Exists."
    confOverwriteConfiguration = "Overwrite $configFile with this new configuration?`n(Backup will be created)"
    confCreatingNewConfigHere = "Creating new config in: {0}"
    confOldConfigurationFile = "Old configuration: {0}"
    confDontOverwriteFileExit = "Safe exit: User decided to not overwrite file, stopping"
    confInstConfigCreated = "The Institution configuration file saved to: {0}"
    confInstLocalSPFileExistsCaption = "Local Institution Relying Party Settings Exist"
    confOverwriteInstLocalSPFileMessage = "Overwrite {0} with new blank configuration?`n(Backup will be created)"
    confOverwriteInstLocalSPFileConfirmed = "Confirmed, saving new Relying Part/Service Provider customizations to: {0}"
    confCreateNewInstLocalSPFile = "Creating new config in: {0}"
    confOldInstLocalSPFile = "Old configuration: {0}"
    confFileSignedWillRemoveSignature = "File signed, stripping signature and putting in place for you to customize"
    confFileNotSignedWillCopy = "File was not signed, simple copy being made"
    confDontOverwriteFileJustProceed = "User decided to not overwrite existing SP settings file, proceeding to next steps" 
    confNoExistingFileSaveTo = "No existing file, saving new configuration to: {0}"
    confAddFileToMainConfigMessage = @"
To be able to (automatically) run Sync-ADFSTkAggregates the configuration file
needs to be added to a ADFSTk configuration file.

This will be done now.
"@
    confConfigurationFileSavedHere = "The configuration file has been saved here: {0}"
    confHowToRunMetadataImport = @"
To run the metadata import use the following command:
Sync-ADFSTkAggregates

Do you want to create a scheduled task that executes this command every hour?
The scheduled task will be disabled when created and you can change triggers as you like.
"@
    confCreateScheduledTask = "Create ADFSToolkit scheduled task?"  
    confImportMetadata = "Import Federated Metadata with ADFSToolkit"
    confTHisSchedTaskWillDoTheImport = "This scheduled task imports the Federated Metadata with ADFSToolkit"
    confFederationDefaultConfigNotFoundQuestion = "Default config file for {0} could not be found! Do you want to use the ADFSToolkit default one?"
    confFederationDefaultConfigNotFound = "Default federation config file for {0} could not be found. Aborting!"
    confCouldNotOpenFederationDefaultConfig = "Could not open default configuration file '{0}'. Error: {1}"
    confDefaultConfigNotFound = "Default config file for {0} could not be found. Aborting!"
    confDefaultConfigIncorrectVersion = "The default configuration file '{0}' is of version {1}. Expected version: {2}. Aborting!"
    confCopyFederationDefaultFolderMessage = "If your federation operators provides a federation-specific default configuration file, make sure to copy the folder to '{0}' before proceeding."
    confNeedMainConfigurationMessage = @"
Before proceeding we need to create a configuration file that holds information about how ADFSToolkit runs.

This will be done now.
"@
    confInstitutionConfigEnabledWarning = @"
The current institution config file is enabled!
To continue without disrupting the ADFSToolkit service it will be disabled.

When the upgrade is done and you have tested everything, run Enable-ADFSTkInstitutionConfiguration to enable it.
"@
    confSelectDefaultFedConfigFile = "Select the default federation configuration file you want to use"
    confCouldNotOpenInstConfigFile = "Could not open or parse the institution configuration file!`r`n{0}"
    confCouldNotRetrieveVersion = "Could not retrieve version from selected configuration file..."
    confOldConfBackedUpTo = "Old configuration file backed up to: '{0}'"
    confUpdatingInstConfigFromTo = "Updating institution config from {0} to {1}"
    confUpdatedInstConfigDone = "{0} updated successfully from v{1} to {2}!"
    confUpdatedInstConfigAllDone = "All Institution config file(s) done..."
    confProcessingInstConfig = "Processing Institution config file: '{0}'"
    confInstConfAlreadyCorrectVersion = "Current Institution config file already at v{0}!"
    confLocalManualSettingsMessage = @"
ADFS Toolkit uses Entity Categories from the metadata to send correct attributes to the Service Providers.

If you need to make local addition/changes for a specific Service Provider ADFS Toolkit provides a PowerShell 
script for that.

We will now look if that file already exists or create it.
"@

    ##########################
    ### Federation cmdlets ###
    ##########################

    federationGetFederationFromURL = "Getting a list of federations from {0}..."
    federationCouldNotGetFederationsFromURL = "Could not get the federations list from URL. Error: {0}"
    federationGettingListFromCachedFile = "Reading the federations list from a previously downloaded file..."
    federationCouldNotGetFederationsFromCache = "Could not get the federations list from the previously downloaded file. Error: {0}"
    federationCouldNotFindCachedFederationsFile = "Could not find the previously downloaded federations list file."
    federationGettingListFromDefaultFile = "Reading the federations list from default file..."
    federationCouldNotGetFederationsFromDefaultFile = "Could not find the default federations file!"
    federationDownloadCanTakeTimeWarning = "Downloading and processing the federations list from eduGAIN. Please wait..."
    
    #############################
    ### Default configuration ###
    #############################
    
    "defaultConfiguration_configuration/metadataURL" = "The URL to the federated metadata"
    "defaultConfiguration_configuration/signCertFingerprint" = "The fingerprint of the certificate that signs the metadata"
    "defaultConfiguration_configuration/MetadataPrefix" = "A prefix that are added to the Service Provider's name in AD FS Console"
    "defaultConfiguration_configuration/staticValues/o" = "The name of your institution"
    "defaultConfiguration_configuration/staticValues/co" = "The name of your Country"
    "defaultConfiguration_configuration/staticValues/c" = "Country Code"
    "defaultConfiguration_configuration/staticValues/schacHomeOrganization" = "The DNS name of your institution"
    "defaultConfiguration_configuration/staticValues/norEduOrgAcronym" = "The short name of your institution"
    "defaultConfiguration_configuration/staticValues/ADFSExternalDNS" = "The DNS name of your ADFS"
    "defaultConfiguration_configuration/eduPersonPrincipalNameRessignable" = "Does your institution reassign eduPersonPrincipalName to new accounts?"

    ################################
    ### Issuance Transform Rules ###
    ################################

    rulesFederationEntityCategoryFile = "Loading Federation-specific Entity Categories..."
    rulesFederationEntityCategoriesFound = "{0} Federation-specific Entity Categories found."
    rulesFederationEntityCategoryLoadFail = "The Federation Entity Category file '{0}' could not be loaded!"
    rulesFederationEntityCategoryOverwrite = "The Federation-specific Entity Category '{0}' found and will overwrite the default in ADFS Toolkit."
    rulesFederationEntityCategoryAdd = "The Federation-specific Entity Category '{0}' found and will be added."
}